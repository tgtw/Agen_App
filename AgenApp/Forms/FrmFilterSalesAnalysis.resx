<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnFilter.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAO
        wwAADsMBx2+oZAAAARlJREFUOE9joBy0X/mPF7chYWzyMEPOvPz5/+W3v0RhkFqEZhgACpx88fP/ky9/
        /z/5/AeIgfSXP//T974G48cgMSD/5IsfENdgBS0X/x9+9uP/nQ9//t/5CMEwA+4CxUByIDVQ1ThAw5n/
        ex59/3/57e//V4A4dNPT/6Ebn4DFGJrOEdAMA9XH/2+5//3/KaBfrRfeAmOGmmNEaoaBsgP/Dzz98V9x
        woX/IDZUlARQsPP/1gc//vO3nvzPULiTDAOyN/9fffvb/1V3vv0HsaGiJIC0tf8XXP8KxiA2VJQEkLj8
        /7TLX8GYIWE5GQbELv7fd+Hz/77zn/+D2FBREkDU/P/tZz7/j1l79z+IDRUlAYA0wTDtAAMDAHWfHPaO
        S2NpAAAAAElFTkSuQmCC
</value>
  </data>
  <data name="btnCancel.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAO
        wwAADsMBx2+oZAAAAcNJREFUOE91kj9LW2EYxfNFrNp63zuoLSh1qIuKrQVp6aKCOuiQRReHWsRFULAg
        hQjdNP4ptFWHIDro0MVBQTG3aoOTjVFv1NJWYz/B6Xme3MSb6D1weN7nnN/7JoGE/Dq0SuAdAxXIJFic
        T7xHwnoQ+IgwaTI/ipk9BheRD/i3HNMpu1fltV/ExHOMY0r1k28WvuJmUfxFd8kVoBzC6Ylx7TIeJ98k
        /8g24fTYCK5np+moTpf7DvMdqxTu6Agyc1FktItqt81cL+e0acrgDg/i78cIPak+G35HD+JK94hOl9mW
        VXbnJ6o2WJwM9OP3+Cg9hj86by3dhim//3JO3wikwj24HHqLXz6nwr2QzsOCtW4eItnZhou+MM59lmyN
        nYfdrxX7ERJvWuF2t8Ptors7stNz/EUTVoMeifHywfMGnL5qwenrlzoPmhuymexqZtxjpqLwkUW7Anv1
        dUg1PqPrccwp+xLBJWPhO8+SiYXRzrayj3zmwampRrLuMZJPn6id2ipIrgClDDNhfgpHO7XVt8wnHuKV
        Fo6qslN2LXyat02ecZQxhcyMMdjlv2umuPBplp0yZL2oUFNBhU9Ttu1jQqH/SQh1nSCXcR8AAAAASUVO
        RK5CYII=
</value>
  </data>
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAIAEBAAAAEACABoBQAAJgAAABAQAAABACAAaAQAAI4FAAAoAAAAEAAAACAAAAABAAgAAAAAAEAB
        AAAAAAAAAAAAAAABAAAAAAAAAAAAAO2/XwD///8A67lbANuUHwAAAAAAAAAAAKdVGQAAAAAAAAAAAPLL
        cgD+//8AAAAAAO2+XgAAAAAA67ZTAAAAAAAAAAAA46Y+AOWqRADakRcAv3k0AO3CYQAAAAAAAAAAAOHD
        ewAAAAAAAAAAAObeywDipDYA7+fVAMl+KwAAAAAA7ubTAAAAAAAAAAAAAAAAAOWrRQAAAAAA248wAO3B
        ZgAAAAAA3JcfAAAAAADmuGAAAAAAAAAAAAAAAAAAAAAAAO2+ZADjsUsAAAAAAAAAAAAAAAAA1YgwAAAA
        AADlrEIAAAAAAAAAAADs2K0A78VpAAAAAAAAAAAA8MZrAAAAAAAAAAAAwX42AAAAAAAAAAAA3JYiAMeF
        PQAAAAAA9dWJAAAAAAAAAAAAAAAAAAAAAAAAAAAA3aBAAOCfMAAAAAAAAAAAAAAAAAAAAAAA0YMmAAAA
        AAAAAAAA25ExAAAAAAAAAAAAAAAAAAAAAAAAAAAAwnYkANSwaADMiz8A8+C6AAAAAAAAAAAArl0cAMRz
        FAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAN2XIwAAAAAA7927AO/FZwDblzsAAAAAAAAA
        AAAAAAAA0Y40ANiPKwAAAAAA25QcAAAAAAAAAAAAAAAAAOaxSQDakRgAAAAAAPPq1wAAAAAAAAAAAOPD
        fAAAAAAAAAAAAAAAAADOgisAAAAAAPHHbAAAAAAA8stvAAAAAADFeScAAAAAAAAAAADXhy4AAAAAAAAA
        AAAAAAAA2p4xAAAAAAAAAAAAAAAAAN2VHQDFgzwAAAAAAAAAAADalDEAAAAAAL9wHwAAAAAAAAAAANGK
        KgAAAAAAAAAAAAAAAADTl0cAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA1pAxANmRFwAAAAAAAAAAAAAA
        AAAAAAAA38ujANiPFADvxGgA8sxyAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AADOj0IAAAAAANaMLQAAAAAAAAAAAAAAAADbkxoAAAAAAPTXmwAAAAAAAAAAANWHLwAAAAAA6rhRANOO
        MwAAAAAAAAAAAMx+IAAAAAAA8d+9AAAAAAAAAAAAAAAAAAAAAAAAAAAA0beLAAAAAADMhi4AyHYYAAAA
        AADThS0AAAAAAN6tVAAAAAAA8MZsAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGMHAAAAAAAAAAAAAAAAAAAVl2QHAAAAAAAAAAAAAAAA
        Qm3bnQAAAAAAAAAAAAAAAJhP0F0AAAAAAAAAAAAAAABGHVSMAAAAAAAAAAAAAAAAXzjBHwAAAAAAAAAA
        AAAAAL98q9oAAAAAAAAAAAAAAACkzHF1AAAAAAAAAAAAAAAApANOhgAAAAAAAAAAAAAAoBYxKN02AAAA
        AAAAAAAAoHDhszyPys0AAAAAAAAAoEi0iog/JVcnmwAAAAAAdsc7YGDSbzux2F6bAAAAdgILfx4hghkc
        sdheXpsAACwysqwUfQQExXhFKpPfAAASEw8BAQ0KCg0BAQ8TEgD8/wAA/D8AAPw/AAD8PwAA/D8AAPw/
        AAD8PwAA/D8AAPw/AAD4HwAA8A8AAOAHAADAAwAAgAEAAIABAACAAQAAKAAAABAAAAAgAAAAAQAgAAAA
        AABABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAALRoIv+wXBiapVMZKwAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADQkzz/6KUn/61X
        D/+oVRnHAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAzZA//+qv
        MP+9Zg7/tWIX/wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAANCU
        Rv/psj7/wGsU/7pnHf8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AADSmUr/7LhJ/8ZxG/++ax//AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAA1ZxO/+6/U//LeCD/wm8i/wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAANiiU//xxF//zn4k/8d6J/8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAADapVj/8shm/9GEKv/Lfyz/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAADIeieK6saB/+/CYf/amDr/y3gk/8uELooAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAADJeBpO6cWI//PPdv/vwmT/57NY/9F9Jv/VjDP/zocuTgAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAADNfRwz5bt8//jbj//uxGP/78ds//LJbP/ckzf/1YUs/9mYPP/Rhy8zAAAAAAAA
        AAAAAAAAAAAAAAAAAADUgBIR4KtY/Pjekf/xxV3/8sZm//HDY//0y2r/6K9E/9mFHf/fkzH/35s49diO
        KgsAAAAAAAAAAAAAAAAAAAAA36VP1fvuw//66Ln/9+jG//Xu4P/z8Or/8e3p/+7p2//aqWT/1qJZ/+Cr
        Xf/eoELWAAAAAAAAAADbmDEe36VHmv7++v//////9vTz//Lz9P/u6d//59Wq/+LPof/m4tf/2cmo/8+y
        eP/Kt5b/08St/92gQ5remTMe4qZC5+e3W//lsk7/25Ma/9yYHv/dlx7/3Zce/9yWGv/dlRv/35kg/+Cd
        Kf/hnyr/4qAp/+CqQ//ir1L/4adC5+WuRj3lq0Fw6LJPrO2+Xs7uwmb07sJl8+/CZPPzynPz88t18+/C
        ZvPuwmXz7sNm9O29X87rtVKs56xEcOauRj38fwAA/D8AAPw/AAD8PwAA/D8AAPw/AAD8PwAA/D8AAPgf
        AADwDwAA4AcAAMADAADAAwAAAAAAAAAAAAAAAAAA
</value>
  </data>
</root>